From d11cf815f52d5a9f651104c4682a260c06c64c90 Mon Sep 17 00:00:00 2001
From: David Sommerseth <davids@openvpn.net>
Date: Wed, 22 Jan 2025 22:55:55 +0100
Subject: [PATCH] common: Check if org.freedesktop.hostname1 is available in
 PlatformInfo

On systems without systemd available, the new setup logic in the
DBus::Proxy::Client will result in a slow failure when trying to
access a non-existing service.  This causes openvpn3-service-client
to timeout and the session is torn down by the session manager before
it gets a chance to start.

This implements a quick check if this service is available.  If not,
just bail out quickly without trying to setup the DBus::Proxy::Client.

Signed-off-by: David Sommerseth <davids@openvpn.net>
---
 src/common/platforminfo.cpp | 27 ++++++++++++++++++++++++---
 1 file changed, 24 insertions(+), 3 deletions(-)

diff --git a/src/common/platforminfo.cpp b/src/common/platforminfo.cpp
index 7d5fc66..2490286 100644
--- a/src/common/platforminfo.cpp
+++ b/src/common/platforminfo.cpp
@@ -44,14 +44,35 @@ PlatformInfo::PlatformInfo(DBus::Connection::Ptr con)
     {
         return;
     }
-    proxy = DBus::Proxy::Client::Create(con, "org.freedesktop.hostname1");
-    hostname1_tgt = DBus::Proxy::TargetPreset::Create("/org/freedesktop/hostname1",
-                                                      "org.freedesktop.hostname1");
+    try
+    {
+        constexpr const char *srvname = "org.freedesktop.hostname1";
+
+        // First do a quick check if the hostname1 service exists on the system
+        auto srvprx = DBus::Proxy::Utils::DBusServiceQuery::Create(con);
+        if (!srvprx->LookupService(srvname) && !srvprx->LookupActivatable(srvname))
+        {
+            // If it does not exist, don't attempt setting up a proxy for it
+            return;
+        }
+        proxy = DBus::Proxy::Client::Create(con, srvname);
+        hostname1_tgt = DBus::Proxy::TargetPreset::Create("/org/freedesktop/hostname1",
+                                                          "org.freedesktop.hostname1");
+    }
+    catch (const DBus::Proxy::Exception &)
+    {
+        // the org.freedesktop.hostname1 service is not available,
+        // continue without it.
+    }
 }
 
 
 const bool PlatformInfo::DBusAvailable() const
 {
+    if (!proxy)
+    {
+        return false;
+    }
     auto qry = DBus::Proxy::Utils::Query::Create(proxy);
     return qry->Ping();
 }
